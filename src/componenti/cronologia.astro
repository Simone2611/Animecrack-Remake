---
import "../styles/componenti.css";
import "../styles/global.css";
import "../js/js.js";

import axios from "axios";
import jsdom from "jsdom";
import { imageConfig } from "astro:assets";
const { JSDOM } = jsdom;
let arr = [];
let links = [];
let arrfinale = [];
let arrfinale2 = [];
let arrayy = [];
if (Astro.cookies.get("crono")) {
  const cookie = [Astro.cookies.get("crono").value];

  links = [Astro.cookies.get("crono").value];
  let array = JSON.parse(cookie);

  await Promise.all(
    array.map(async (element, index) => {
      // let fix = element.replaceAll("/play/", "");
      let fix2 = element.replaceAll(Astro.url.origin, "");
      // let fix3 = fix2.split("/")[0];
      // let fixfinal = fix3.split(".")[0].replaceAll("-", "+");
      // console.log(fixfinal);

      await axios.get("https://www.animeworld.so" + fix2).then(({ data }) => {
        const dom = new JSDOM(data);
        let matches = dom.window.document.querySelectorAll(
          ".head > .d-md-none > img"
        );

        matches.forEach((element) => {
          let fixed = element.outerHTML;

          arr.push({ fixed: fixed, index: index });
        });
      });
      await axios.get("https://www.animeworld.so" + fix2).then(({ data }) => {
        const dom = new JSDOM(data);
        let matches = dom.window.document.querySelectorAll(
          ".episode > .active "
        );

        matches.forEach((element) => {
          let fixed = element.outerHTML;

          arrayy.push({ fixed: fixed, index: index });
        });
      });
    })
  );

  arr = arr.sort((a, b) => {
    if (a.index < b.index) {
      return -1;
    } else if (a.index > b.index) {
      return 1;
    }
    // a must be equal to b
    return 0;
  });
  arrayy = arrayy.sort((a, b) => {
    if (a.index < b.index) {
      return -1;
    } else if (a.index > b.index) {
      return 1;
    }
    // a must be equal to b
    return 0;
  });
  for (let i = 0; i < arr.length; i++) {
    arrfinale.push(arr[i].fixed);
  }
  for (let i = 0; i < arrayy.length; i++) {
    arrfinale2.push(arrayy[i].fixed);
  }
}
---

<div id="allcrono" class="cont-anime">
  <div class="recentiC">
    <div class="pagbtn-l">
      <p class="Recenti">Cronologia</p>
    </div>
  </div>
  <div class="contenitore-anime-new">
    <div class="contenitore" id="crono">
      {arrfinale}
    </div>
  </div>
</div>
<div class="hidden" id="links">{links}</div>
<div class="hidden" id="ep">{arrfinale2}</div>
<script>
  const allcrono = document.getElementById("allcrono");

  const crono = document.getElementById("crono");

  let trasf = crono.innerText.trim();

  crono.innerHTML = trasf;
  if (crono.innerHTML == "") {
    allcrono.classList.add("hidden");
  } else {
    const ep = document.getElementById("ep");

    let transformato2 = ep.innerText.trim();

    ep.innerHTML = transformato2;
    let arrep = [];
    let epname = ep.querySelectorAll("a");
    epname.forEach((element) => {
      arrep.push(element.innerText);
    });
    const links = JSON.parse(document.getElementById("links").innerText);
    const img = crono.querySelectorAll("img");
    let i = 0;
    img.forEach((element) => {
      const div = document.createElement("div");
      const a = document.createElement("a");
      const a2 = document.createElement("a");

      div.classList.add("inner");

      a.classList.add("poster");
      a.appendChild(element);
      a.href = links[i];

      a2.classList.add("name");
      a2.innerText = element.alt;
      a2.href = links[i];
      a2.innerText = a2.innerText + " ep " + arrep[i];

      div.appendChild(a);
      div.appendChild(a2);
      crono.appendChild(div);
      i++;
    });
  }
</script>
