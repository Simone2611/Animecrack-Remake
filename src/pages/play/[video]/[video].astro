---
import Playvideo from "../../../componenti/playvideo.astro";
import img from "/src/img/wallpaper.jpg";
import "../../../styles/componenti.css";
import "../../../js/js.js";

import axios from "axios";
import jsdom from "jsdom";
import { manifest } from "astro:ssr-manifest";
const { JSDOM } = jsdom;

let URL = Astro.request.url;

const URLplay = URL.split("/");

let link2 =
  "https://www.animeworld.so/api/episode/serverPlayerAnimeWorld?id=" +
  URLplay.at(-1);
let nome1 = URLplay.at(-2).split(".");
let nome2 = nome1.at(-2);
let nome3 = nome2.replaceAll("-", " ");
let nomefinale = nome3.toUpperCase();

let link = "";

await axios.get(link2).then(({ data }) => {
  const dom = new JSDOM(data);
  let matches = dom.window.document.querySelectorAll("div video source");

  matches.forEach((element) => {
    let fixed = element.src;

    link = fixed;
  });
});

let arr = [];
let URL2 = URL.replace(Astro.url.origin, "");

await axios.get("https://www.animeworld.so" + URL2).then(({ data }) => {
  const dom = new JSDOM(data);
  let matches = dom.window.document.querySelectorAll("div > .server.active");

  matches.forEach((element) => {
    let fixed = element.outerHTML;

    arr.push(fixed);
  });
});
let desc = "";

await axios.get("https://www.animeworld.so" + URL2).then(({ data }) => {
  const dom = new JSDOM(data);
  let matches = dom.window.document.querySelectorAll(".desc");

  matches.forEach((element) => {
    let fixed = element.outerHTML;
    let fixed2 = fixed.replaceAll(`<div class="desc">`, ``);
    desc = fixed2.replaceAll(`</div>`, ``);
  });
});
let tag = "";
await axios.get("https://www.animeworld.so" + URL2).then(({ data }) => {
  const dom = new JSDOM(data);
  let matches = dom.window.document.querySelectorAll("#tagsReload");

  matches.forEach((element) => {
    let fixed = element.outerHTML;
    let fixed2 = fixed.replaceAll(
      `<p id="tagsReload" style="max-height: 100px; overflow-y: auto; font-size: 10px; font-family: 'Nunito Sans', sans-serif;">`,
      ``
    );
    let fixed3 = fixed2.replaceAll(`</p>`, ``);
    let fixed4 = fixed3.replaceAll(`<span>`, "");
    let fixed5 = fixed4.replaceAll(`<span class="episode-num-keywords">`, "");

    tag = decodeURI(fixed5.replaceAll("</span>", ""));
  });
});
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Animecrack</title>
  </head>
  <body>
    <img class="bgimg" src={img.src} />
    <Playvideo />
    <div class="videocontainer2">
      <div class="contsinistra">
        <div class="videocontainer">
          <video controls autoplay>
            <source src={link} type="video/mp4" />
          </video>
          <div class="contenitorebtn">
            <p class="nomeanime" id="nomeEp">{nomefinale}</p>
            <button class="nodispl btn" id="previous"></button>
            <button class="nodispl btn" id="next"></button>
          </div>
          <p id="desc">{desc}</p>
        </div>

        <div class="contenitoreep">
          <div class="contenitorebtn">
            <p id="numeropagina">Episodi pagina:</p>
            <button class="btn" id="eppag-pre">&lt</button>
            <button class="btn" id="eppag-next">&gt</button>
          </div>

          <div class="ep" id="contenitore">{arr}</div>
        </div>
      </div>

      <div class="contenitore-desc">
        <div class="tagcontainer">
          <h2>Tag</h2>
          <!-- <button class="showbtn" id="show">Show all</button> -->
        </div>

        <p id="tag">{tag}</p>
      </div>
    </div>

    <script>
      const contenitore = document.getElementById("contenitore");

      let transformato = contenitore.innerText.trim();

      contenitore.innerHTML = transformato;

      let numero = 0;
      let quantepag = 0;
      const allep = document.querySelectorAll("ul");
      allep.forEach((element) => {
        numero += 1;
        element.setAttribute("id", "n" + numero);
        quantepag++;
      });
      const numeropag = document.getElementById("numeropagina");

      numeropag.innerText = "Episodi pagina 1 / " + quantepag;

      const nextlista = document.getElementById("eppag-next");
      const prelista = document.getElementById("eppag-pre");

      let pagina = 1;

      nextlista.addEventListener("click", (e) => {
        if (pagina == quantepag) {
        } else {
          let darimuovere = document.getElementById("n" + pagina);
          let aggiungere = document.getElementById("n" + (+pagina + 1));
          darimuovere.classList.remove("active");
          darimuovere.classList.add("hidden");
          aggiungere.classList.add("active");
          aggiungere.classList.remove("hidden");
          pagina++;
          numeropag.innerText = "Episodi pagina " + pagina + " / " + quantepag;
        }
      });

      prelista.addEventListener("click", (e) => {
        if (pagina == 1) {
        } else {
          let darimuovere = document.getElementById("n" + pagina);
          let aggiungere = document.getElementById("n" + (+pagina - 1));
          darimuovere.classList.remove("active");
          darimuovere.classList.add("hidden");
          aggiungere.classList.add("active");
          aggiungere.classList.remove("hidden");
          pagina -= 1;
          numeropag.innerText = "Episodi pagina " + pagina + " / " + quantepag;
        }
      });

      const ep = document.querySelector(".episode .active");
      const nomeEp = document.getElementById("nomeEp");
      let nextbtn = document.getElementById("next");
      let normale = nomeEp.innerText.toLowerCase();
      nomeEp.innerText =
        normale.charAt(0).toUpperCase() +
        normale.slice(1) +
        " Ep " +
        ep.textContent;

      // const tag = document.getElementById("tag");
      // const show = document.getElementById("show");
      // let n = 1;
      // show.addEventListener("click", (e) => {
      //   if (n == 1) {
      //     tag.style.overflow = "visible";
      //     tag.style.textOverflow = "unset";
      //     tag.style.maxWidth = "100%";
      //     tag.style.whiteSpace = "initial";
      //     show.innerText = "Hide all";
      //     n = 2;
      //   } else {
      //     tag.removeAttribute("style");
      //     show.innerText = "Show all";
      //     n = 1;
      //   }
      // });

      next();

      function next() {
        try {
          let nextLink =
            document.querySelector("a.active").parentElement.nextElementSibling
              .children[0].href;
          if (nextLink == null || nextLink == undefined || nextLink == "") {
          } else {
            let nextA = document.createElement("a");
            nextA.href = nextLink;
            nextA.innerHTML = "Next Episode";
            nextbtn.classList.add("displ");
            nextbtn.classList.remove("nodispl");
            nextbtn.appendChild(nextA);
          }
          prev();
        } catch (err) {
          prev();
        }
      }

      function prev() {
        let nextbtn2 = document.getElementById("previous");

        let nextLink2 =
          document.querySelector("a.active").parentElement
            .previousElementSibling.children[0].href;
        if (nextLink2 == null || nextLink2 == undefined || nextLink2 == "") {
        } else {
          let nextA2 = document.createElement("a");
          nextA2.href = nextLink2;
          nextA2.innerHTML = "Previous Episode";
          nextbtn2.classList.add("displ");
          nextbtn2.classList.remove("nodispl");
          nextbtn2.appendChild(nextA2);
        }
      }
    </script>
  </body>
</html>
